---
import Layout from '@/layout/Layout.astro';
import Header from './Component.astro';
const Element = 'div';
const Component = Header;
const htmlString = '<p>Raw HTML content</p>';
const items = ['Dog', 'Cat', 'Platypus'];
const { generator } = Astro.props;
---

<Layout title="test">
  <h1>
    Escribistes "/test" en el navegador y estás viedo esta página, hmmmm,no
    debería pasar pero lo sabré si ocurre, ahora conozco tus datos por
    curios@... jajaja na mentira eso no se puede. Bye.
  </h1>
  <Fragment set:html={htmlString} />
  <Element data-value="3">Hello!</Element>
  <ul>
    {
      items.map((item) => (
        <>
          <li>Red {item}</li>
          <li>Blue {item}</li>
          <li>Green {item}</li>
        </>
      ))
    }
  </ul>
  <h2>{generator}</h2>
  <Component>
    <h2>child component</h2>
  </Component>
  <!-- HTML-style comments will be included in browser DOM, while JS ones will be skipped. To leave TODO messages or other development-only explanations, you may wish to use JavaScript-style comments instead. -->
</Layout>
<script>
  let numericId; // numericId is undefined
  let id: string | number = 123; // default value is 123
  if (typeof numericId !== 'undefined') {
    id = numericId;
  }
  console.log(id); // this logs 123
</script>
