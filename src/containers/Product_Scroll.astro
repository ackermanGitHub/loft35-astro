---
import { IProduct } from '@/utils/data';
import CategoryGroup from '../components/Category_Group.astro';
import ProductCategories from '../components/Product_Categories';

export interface Props {
  products: IProduct[];
  categories: string[][];
}
const { products, categories } = Astro.props;
---

<div class="m-auto w-[95%] rounded-b-lg bg-[var(--secondary-bg-color)]">
  <ProductCategories categories={categories} />
  {
    categories.map((categoryGroup) => {
      const categoryProducts = products.filter((product) =>
        categoryGroup.includes(product.category)
      );
      return (
        <CategoryGroup
          categoryProducts={categoryProducts}
          categoryGroup={categoryGroup}
        />
      );
    })
  }
</div>
<!-- <div id="productDetailDiv" class="fixed inset-0 z-10 h-full w-full bg-gray-900 bg-opacity-75">
      <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-[var(--secondary-bg-color)] p-4 rounded-lg shadow-lg">
        <img
          src={product.image.src}
          alt={product.image.name}
          height={250}
          width={250}
        />
        <h1 class="mb-4 text-lg font-medium">{product.name}</h1>
        <button
          id="closeProductDetailBtn"
          class="absolute top-0 right-0 p-4"
        >
          Close
        </button>
      </div>
    </div> -->
<script>
  const productDetailDiv = document.getElementById('productDetailDiv');

  /* 
  import { useRef } from 'react';

export default function Modal() {
  const modalRef = useRef<HTMLDivElement>(null);

  const toggleModal = () => {
    const modal = modalRef.current;

    if (modal?.classList.contains('scale-0')) {
      modal?.classList.remove('scale-0');
      modal?.classList.add('scale-100');
    } else {
      modal?.classList.remove('scale-100');
      modal?.classList.add('scale-0');
    }
  };

  return (
    <div className="relative overflow-hidden">
      <div className="flex items-center justify-center">
        <div
          className="bg-white p-4 rounded-lg shadow-lg transform scale-0 transition-transform"
          ref={modalRef}
        ></div>
      </div>
      <div className="flex items-center justify-center w-screen">
        <button
          className="bg-indigo-500 hover:bg-indigo-600 text-white font-semibold py-2 px-4 rounded-lg shadow-md"
          onClick={toggleModal}
          style={{ zIndex: 100 }}
        >
          Open Modal
        </button>
      </div>
    </div>
  );
}

  */
</script>
