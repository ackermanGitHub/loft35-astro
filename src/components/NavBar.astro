---
export interface IProps {}
const {} = Astro.props;
---

<nav class="my-5 mx-auto flex h-auto w-[95%] items-center justify-center">
  <div
    class="flex w-[90%] flex-row items-center justify-center max-md:justify-between"
  >
    <!-- <FindProducts /> -->
    <form class="mr-10 flex h-10 justify-around transition-all">
      <div class="relative flex items-center">
        <input
          type="text"
          id="search"
          placeholder="Buscar"
          class="h-full max-w-[200px] rounded-l-lg border-[1px] border-r-0 border-[var(--btn-input-border-primary-color)] bg-[var(--btn-input-primary-color)] px-4 font-medium text-[#555555]"
        />
        <button
          type="submit"
          class="flex h-full min-w-[40px] items-center justify-center rounded-r-lg border-[1px] border-[var(--btn-input-border-primary-color)] bg-[var(--btn-input-primary-color)] border-[#d3d5dd] bg-[#f5f8fa] px-2"
        >
          <svg
            fill="none"
            width={18}
            height={18}
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="#a1a5b7"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"
            ></path>
          </svg>
        </button>
      </div>
    </form>
    <div
      id="toggleThemeBtn"
      class="flex w-1/3 justify-around max-md:justify-between"
    >
      <!-- 
      <StarIcon stroke={'var(--ico-primary-color)'} height={15} />
      <InstagramIcon stroke="var(--ico-primary-color)" height={15} />
      <ShoppingCart stroke="var(--ico-primary-color)" height={15} />
     -->
      <svg
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        width={18}
        height={18}
        stroke="var(--ico-primary-color)"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z"
        ></path>
      </svg>
      <svg
        stroke="var(--ico-primary-color)"
        width={18}
        height={18}
        viewBox="0 0 24 24"
        fill="none"
      >
        <path
          d="M9 22H15C20 22 22 20 22 15V9C22 4 20 2 15 2H9C4 2 2 4 2 9V15C2 20 4 22 9 22Z"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
        <path
          d="M12 15.5C13.933 15.5 15.5 13.933 15.5 12C15.5 10.067 13.933 8.5 12 8.5C10.067 8.5 8.5 10.067 8.5 12C8.5 13.933 10.067 15.5 12 15.5Z"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
        <path
          d="M17.6361 7H17.6477"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
      </svg>
      <svg
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        width={18}
        height={18}
        stroke="var(--ico-primary-color)"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 00-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 00-16.536-1.84M7.5 14.25L5.106 5.272M6 20.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm12.75 0a.75.75 0 11-1.5 0 .75.75 0 011.5 0z"
        ></path>
      </svg>
    </div>
  </div>
</nav>
<script>
  const htmlElement = document.querySelector("html");
  htmlElement?.setAttribute("data-color-scheme", "light");
  const toggleThemeBtn = document.querySelector(
    "#toggleThemeBtn"
  ) as HTMLDivElement;
  toggleThemeBtn.addEventListener("click", toggleTheme);

  function toggleTheme() {
    const htmlElement = document.querySelector("html") as HTMLHtmlElement;
    if (htmlElement.getAttribute("data-color-scheme") === "dark") {
      htmlElement.setAttribute("data-color-scheme", "light");
    } else {
      htmlElement.setAttribute("data-color-scheme", "dark");
    }
  }
</script>
